import numpy as np 
import tensorflow as tf
from tensorflow.keras.models import Model
from tensorflow.keras.layers import Input, LSTM, RepeatVector 
from tensorflow.keras.callbacks import ModelCheckpoint 

# Generate some random data
data = np.random.rand(1000, 10, 1)

# Hyperparameters
latent_dim = 2 

# Define the autoencoder
inputs = Input(shape=(10, 1)) 
encoded = LSTM(4)(inputs)
encoded = RepeatVector(10)(encoded)
decoded = LSTM(4, return_sequences=True)(encoded)
decoded = tf.keras.layers.TimeDistributed(tf.keras.layers.Dense(1))(decoded)

autoencoder = Model(inputs, decoded)
autoencoder.compile(optimizer='adam', loss='mse') 
autoencoder.summary()

# Train the autoencoder
autoencoder.fit(data, data, epochs=50, batch_size=32, validation_split=0.2) 

# Define the encoder model
encoder = Model(inputs, encoded)

# Define the decoder model
encoded_input = Input(shape=(10, 4)) 
decoder_layer = autoencoder.layers[-2](encoded_input) 
decoder_layer = autoencoder.layers[-1](decoder_layer)
decoder = Model(encoded_input, decoder_layer)
